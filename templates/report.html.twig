{% extends "base.html.twig" %} {% block title %}Report{% endblock %} {% block
body %}
<h1>Reports</h1>

<div class="navbar-report">
    <ul>
        <li><a href="#kmom01">Kmom01</a></li>
        <li><a href="#kmom02">Kmom02</a></li>
        <li><a href="#kmom03">Kmom03</a></li>
        <li><a href="#kmom04">Kmom04</a></li>
        <li><a href="#kmom05">Kmom05</a></li>
        <li><a href="#kmom06">Kmom06</a></li>
    </ul>
</div>
<h2 id="kmom01">Kmom01</h2>
<h3>
    Berätta kort om dina förkunskaper och tidigare erfarenheter kring
    objektorientering.
</h3>
<p>
    Mina förkunskaper kring objektorientering kommer från kurserna OoPython där
    vi jobbade mycket med klasser och även kursen Databaser där vi skapade
    klasser i javascript.
</p>

<h3>
    Berätta kort om PHPs modell för klasser och objekt. Vilka är de grunder man
    behöver veta/förstå för att kunna komma igång och skapa sina första klasser?
</h3>
<p>
    Grunderna man måste förstå om PHPs modell för klasser och objekt för att
    komma igång:
</p>
<p>
    Klasser fungerar som mallar för att skapa objekt. Objekt är konkreta
    instanser av klasserna. Inuti klasser definieras funktioner (som kallas
    metoder) som utför olika handlingar relaterade till objekten. Samt finns
    egenskaper, som är variabler som representerar objektens attribut. Klasser
    är i stort sett ett omslag av olika funktioner som hör ihop.
</p>
<p>
    Sedan har vi konstruktorn, en speciell metod med namnet __construct(),
    används för att initialisera objektets tillstånd när det skapas.
</p>
<p>
    Synlighet (Visibility) reglerar åtkomsten till klassens medlemmar från
    utanför klassen genom att använda synlighetsnivåer som public, protected,
    och private.
</p>

<h3>
    Reflektera kort över den kodbas, koden, strukturen som användes till
    uppgiften me/report, hur uppfattar du den?
</h3>
<p>
    Jag känner att jag har för lite kunskap för att förstå frågan korrekt. Jag
    känner inte att jag har någon riktigt uppfattning mer än att
    katalogstrukturen är väldigt rörig och jobbig då det är så många mappar.
    Svårt att hitta och skifta mellan olika filer.
</p>

<h3>
    Med tanke på artikeln “PHP The Right Way”, vilka delar i den finner du extra
    intressanta och värdefulla? Är det några särskilda områden som du känner att
    du vill veta mer om? Lyft fram några delar av artikeln som du känner mer
    värdefulla.
</h3>
<p>
    Jag tog en titt på “PHP The Right Way” men känner att jag är för ny för att
    kunna uttyda vilka områden som vore extra intressanta och värdefulla. Kanske
    de avsnitt som täcker PHP-principer och bästa praxis för att skriva säker,
    effektiv och lättläst kod? Och då vi hållit på mycket med testning i OoP så
    kanske det är något att fördjupa sig i?
</p>

<h3>Vilken är din TIL för detta kmom?</h3>
<p>
    Det jag lärt mig i detta kursmoment är hur objekt/klasser skrivs i PHP. Och
    så en liten uppfriskning av PHP-syntax.
</p>

<h2 id="kmom02">Kmom02</h2>
<h3>
    Förklara kort de objektorienterade konstruktionerna arv, komposition,
    interface och trait och hur de används i PHP.
</h3>
<p>
    Skillnaden mellan arv och komposition är att i arv använder vi "extend" för
    att ärva funktioner från en annan klass. Sedan använder vi "->" för att
    komma åt dessa funktioner och egenskaper från objektet av den underordnade
    klassen.
</p>

<p>
    I komposition skapar vi ingen hierarki genom “extend”. Istället skapar vi
    instanser av andra klasser som medlemmar i den aktuella klassen. Sedan
    använder vi "->" för att komma åt funktioner och egenskaper från dessa
    instanser.
</p>

<p>
    Ett gränssnitt (Interface) i PHP är som en "blueprint" eller ritning för hur
    en klass ska struktureras och vilka metoder den måste implementera/uppfylla.
    Traits i sin tur tillåter återanvändning av kod i flera klasser utan att
    behöva använda arv.
</p>

<h3>
    Berätta om din implementation från uppgiften. Hur löste du uppgiften, är du
    nöjd/missnöjd, vilken förbättringspotential ser du i din koden och dina
    klasser?
</h3>
<p>
    Jag utgick en del ifrån övningen. Uppgiftskraven följde jag uppifrån och
    ned. Är generellt sett nöjd men det finns förbättringspotential. T.ex. är
    koden i ApiController och CardGameController väldigt lika och det skulle gå
    att dela kod mellan dem, kanske i basklassen AbstractCardController eller
    via traits. Även om mycket gemensam kod hanteras i DeckOfCards, och både
    ApiController och CardGameController ropar in i den klassen, så skulle det
    alltså gå att dela “kontroller”-logik också.
</p>

<p>
    Arvet mellan Card och AbstractCard känner jag inte blev särskilt
    konstruktivt, utan mer bara för att uppfylla kravet i uppgiften. Jag hade
    kanske kunnat göra ett CardGraphics eller liknande, bara för att få lite
    logik i den icke-abstrakta klassen. Men samtidigt gillar jag att effekten av
    nuvarande kod blir rätt. Både $suit och $rank i AbstractCard är publika,
    något jag var tvungen till för att kunna spara och läsa kort från sessionen.
    Dessa hade jag gärna gjort private för att dölja dem från omvärlden. Det
    kanske går men är inget jag utforskat närmare.
</p>

<h3>
    Vilka är dina reflektioner så här långt med att jobba i Symfony med
    applikationskod enligt MVC?
</h3>
<p>
    Spontana känslan är att det är långsammare, alltså själva exekveringen av
    sidorna. Det tar längre tid att ladda dessa jämfört med exempelvis Flask och
    expressjs. Lite krångligare syntax i routerna i Symfony. Dokumentationen för
    Flask och expressjs gillar jag bättre än motsvarande för Symfony. Kort sagt
    så gillar jag övriga ramverk bättre än Symfony.
</p>

<h3>Vilken är din TIL för detta kmom?</h3>
<p>
    Har lärt mig vad ett interface är och vad den används för. Samt om traits,
    hur de är användbara att skapa mer “dry code”.
</p>
<h2 id="kmom03">Kmom03</h2>
<p>
    Berätta hur det kändes att modellera ett kortspel med flödesdiagram och
    psuedokod. Var det något som du tror stödjer dig i din problemlösning och
    tankearbete för att strukturera koden kring en applikation?
</p>

<p>
    Nu råkade jag commita koden innan flödesschema och pseudokod, även om jag
    hela tiden haft tankar om hur jag vill lösa uppgiften. Men ja, det känns bra
    att tänka igenom ett problem innan. Sedan kanske implementationen ändå blir
    annorlunda mot ursprungstanken i takt med att man stöter på oväntade
    problem.
</p>

<h3>
    Berätta om din implementation från uppgiften. Hur löste du uppgiften, är du
    nöjd/missnöjd, vilken förbättringspotential ser du i din koden, dina klasser
    och applikationen som helhet?
</h3>

<p>
    Överlag är jag ganska nöjd. Lintern spökar lite: den klagar bl.a. på att jag
    anropar metoder på en mixed; t.ex. så returnerar SessionInterface→get() en
    mixed, vilket är förståeligt, men det sprider sig vidare i min kod vilket
    gör det svårt att tydligt definiera returtyper m.m. Jag har inte grävt
    vidare så mycket i hur man kan lösa den här typen av problem, utan
    accepterar att det finns varningar från lintern. En hel del av dem gick dock
    att rätta. Jag började med en hel del kod i kontrollern men som jag senare
    lyckades flytta ut i mina klasser (Game). Jag lyckades också införa ett
    interface, FlashMessage, som ett par metoder i Game tar in. På så vis kunde
    jag lägga till flashmeddelanden på kontrollern från Game.
</p>

<h3>
    Vilken är din känsla för att koda i ett ramverk som Symfony, så här långt in
    i kursen?
</h3>

<p>
    Helt ok, även om jag gillar Flask och expressjs bättre. Men PHP börjar växa
    på mig.
</p>

<h3>Vilken är din TIL för detta kmom?</h3>

<p>
    Lärde mig lite om vad som är "bra och ren kod" och om SOLID-principerna som
    främjar en modulär, flexibel och underhållbar kod.
</p>

<h2 id="kmom04">Kmom04</h2>
<h3>
    Berätta hur du upplevde att skriva kod som testar annan kod med PHPUnit och
    hur du upplever phpunit rent allmänt.
</h3>
<p>
    En intressant upplevelse. PHPUnit var rätt trevligt att arbeta med. Dock
    stötte jag på att deras dokumentation inte vara helt uppdaterad. T.ex. så
    försökte jag vid nåt tillfälle använda
    <code>this→onConsecutiveCalls()</code> enligt deras sida men fick då
    tillbaka att den är "deprecated". Hittade då att man kunde använda
    <code>willReturnOnConsecutiveCalls()</code>.
</p>

<h3>
    Hur väl lyckades du med kodtäckningen av din kod, lyckades du nå mer än 90%
    kodtäckning?
</h3>
<p>
    Ja, på de flesta klasserna. Bara Game som ligger lägre än 100 %.
</p>

<h3>
    Upplever du din egen kod som “testbar kod” eller finns det delar i koden som
    är mer eller mindre testbar och finns det saker som kan göras för att
    förbättra kodens testbarhet?
</h3>
<p>
    Jag tycker att en hel del gick att testa ganska enkelt. Vid några tillfällen
    fick jag både leka med att stubba och mocka några klasser för att styra vad
    deras metoder returnerar. Minst en av klasserna, Game, blev rätt komplex och
    kunde må bra av att förenkla. T.ex. genom att dela upp den i fler
    självständiga delar/klasser.
</p>

<h3>
    Valde du att skriva om delar av din kod för att förbättra den eller göra den
    mer testbar, om så berätta lite hur du tänkte.
</h3>
<p>
    I förra kursmomentet hade jag introducerat ett interface, FlashMessage, som
    underlättade en hel del i testningen. Den främsta ändringen jag gjorde var
    att låta Game::_construct() ta in spelarna och kortleken i stället för att
    skapa upp dem däri. Detta underlättade i testerna eftersom jag kunde skicka
    med mina egna versioner som i några fall är stubbade.
</p>

<h3>
    Fundera över om du anser att testbar kod är något som kan identifiera “snygg
    och ren kod”.
</h3>
<p>
    Det tror jag definitivt. Ju mer komplex koden är skriven desto krångligare
    blir testfallet. Man villl nog inte hamna i en situation där testmetoderna
    är för långa; känns som att man vill hålla det så enkelt som möjligt och för
    att det ska vara möjligt måste den bakomliggande koden också vara enkel.
</p>

<h3>Vilken är din TIL för detta kmom?</h3>
<p>
    Att mocka och stubba med PHPUnit. Många bra hjälpmetoder för att asserta
    olika scenarion. Att man kan ha en setUp() i sin testklass som körs innan
    varje test.
</p>

<h2 id="kmom05">Kmom05</h2>
<h3>
    Gick det bra att jobba igenom övningen med Symfony och Doctrine. Något
    särskilt du tänkte/reagerade på under övningen?
</h3>
<p>
    Övningen var enkel att följa, stötte inte på några särskilda problem eller
    tankar.
</p>

<h3>
    Berätta om din applikation och hur du tänkte när du byggde upp den. Tänkte
    du något speciellt på användargränssnittet?
</h3>
<p>
    Jag tänkte att applikationen påminde väldigt mycket om tidigare uppgifter,
    t.ex. den där vi skulle skapa och lägga till produkter för en webbshop. Så
    sidorna ser ganska lika ut mellan dessa.
</p>

<h3>
    Gick det bra att jobba med ORM i CRUD eller vad anser du om det, jämför
    gärna med andra sätt att jobba med databaser?
</h3>
<p>
    Det gick helt ok. Var enkelt att läsa upp, ändra, skapa och radera böcker. I
    och för sig är Book en ganska enkel klass så frågan är hur det går om det
    börjar finnas kopplingar till andra klasser. Om vi t.ex. skulle modellera
    author som en “Person” i stället för en sträng, med attribut som namn, ålder
    m.m. Då tänker jag att det kanske kan bli klurigare.
</p>

<h3>
    Vad är din uppfattning om ORM så här långt och relatera gärna till andra
    sätt att jobba med applikationskod mot databaser?
</h3>
<p>
    Som sagt så känns det smidigt, i alla fall om det är enkla klasser som Book.
    Om vi har mer komplexa strukturer så kanske det inte är lika enkelt. Genom
    att skriva sql direkt så får jag fullständig kontroll på vad som hämtas och
    sparas. Med en ORM så sker det automatiskt vilket kanske kan innebära
    utmaningar framåt.
</p>

<h3>Vilken är din TIL för detta kmom?</h3>
<p>
    Doctrine och att arbeta med en ORM i php. Klassen som BookRepository ärver
    ifrån, <strong>ServiceEntityRepository</strong>, har en massa färdiga
    metoder som jag slapp skapa själv, t.ex. findOnyBy().
</p>

<h2 id="kmom06">Kmom06</h2>
<p>...</p>
{% endblock %}
